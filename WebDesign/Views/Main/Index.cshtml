@{
    //    Layout = null;
}
@section head {
    @Styles.Render("~/Content/colorboxcss")
    <link href="@Url.Content("~/Content/calender.css")" rel="stylesheet" type="text/css" />
    <script>
        // jQueryでのpost送信用に、formデータを生成するメソッド
        function createFormInputsFromObject(data, prefix) {
            prefix = prefix || '';
            var inputs = '';
            // 引数で渡された全ての項目に対して処理
            $.each(data, function (name, value) {
                if (prefix !== '') name = prefix + '[' + name + ']';
                // 該当項目が配列の場合は再帰処理
                if (Array.isArray(value) || value instanceof Object) {
                    inputs += createFormInputsFromObject(value, name);
                } else {
                    // hidden属性を持つinputタグをname,valueをセットし生成
                    inputs += $('<input>').attr({
                        type: 'hidden',
                        name: name,
                        value: value
                    }).prop('outerHTML');
                }
            });

            return inputs;
        }
        document.addEventListener('DOMContentLoaded', function () {
            // カレンダー設定
            const calendarEl = document.getElementById('calendar');
            const calendar = new FullCalendar.Calendar(calendarEl, {
                // ヘッダツールバー設定
                //   （左：戻る、次へ、今日）
                //   （中央：タイトル）
                //   （右：月、週、日）
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                // ロケール設定：日本語
                locale: 'ja',
                // bootstrapとの共有
                themeSystem: 'bootstrap',
                // 初期日時
                initialDate: '2021-03-03',
                // 日付のリンク設定(クリックすると日単位の表示へ)
                navLinks: true,
                // 営業時間表示（土日の背景切り替えもこの設定)
                businessHours: true,
                // 編集可否
                editable: false,
                // 選択可否
                selectable: true,
                // 時間の表示書式(h:mm)
                eventTimeFormat: {
                    hour: 'numeric',
                    minute: '2-digit'
                },
                // eventDidMount=イベント毎のDOM生成後の処理
                // 対象のイベント項目にPopperを適用する
                eventDidMount: function (info) {
                    const tooltip = new Tooltip(info.el, {
                        title: info.event.extendedProps.description,
                        placement: 'top',
                        trigger: 'hover',
                        container: 'body'
                    });
                },
                // 対象イベントのクリック処理
                eventClick: function (info) {
                    alert('Event: ' + info.event.title + ',id: ' + info.event.id);
                    alert('View: ' + info.view.type);
                    // サンプル（クリックしたスケジュールによる分岐例）
                    if (info.event.id == '262399c4-3d9c-4d4f-b090-c8d8e8b50358') {
                        // サンプル（iframeの表示ページへPOST送信するケース）
                        $.colorbox({
                            width: "80%",
                            height: "80%",
                            iframe: true,
                            onComplete: function () {
                                // onComplete=iframeの表示完了時にpost送信を自動実行
                                // iframeのdom要素を取得
                                const iframe = jQuery('#cboxLoadedContent iframe');
                                // 送信するformタグを生成
                                const form = jQuery('<form>').attr({
                                    action: "./test_sub1.html",
                                    method: 'POST',
                                    target: iframe.attr('name')
                                });
                                // post送信するデータ
                                const postData = {
                                    id: info.event.id,
                                    title: info.event.title
                                }
                                // post送信データを基に、formタグにinputタグを付加する
                                $(createFormInputsFromObject(postData)).appendTo(form);
                                // 生成したformをsubmit実行
                                form.appendTo(iframe)
                                    .submit()
                                    .remove();
                            }
                        });
                    } else {
                        // サンプル（iframeの表示ページへGET送信するケース）
                        $.colorbox({
                            width: "80%",
                            height: "80%",
                            iframe: true,
                            href: "./test_sub2.html"
                        });
                    }
                },
                // 日付をクリック
                dateClick: function (info) {
                    $.colorbox({
                        width: "80%",
                        height: "80%",
                        iframe: true,
                        href: "./test_day_sub.html"
                    });
                },
                // イベント(スケジュール)情報
/*
                events: [{
                    id: '262399c4-3d9c-4d4f-b090-c8d8e8b50358',
                    title: 'ガス代',
                    description: '3,750円',
                    start: '2021-03-10T13:00:00',
                    end: '2021-03-10T13:00:00'
                }, {
                    id: '3a05c506-3e5a-4e33-bd9e-e2a92ae37e27',
                    title: '食費',
                    description: '12,870円',
                    start: '2021-03-13T11:30:00',
                    end: '2021-03-13T11:30:00',
                    color: '#257e4a'
                }]
*/
                events: function (start, end, timezone, callback) {
                    $.ajax({
                        type: "GET",    //WebMethods will not allow GET
                        url: "api/Main/GetCalendarEvents",
                        //completely take out 'data:' line if you don't want to pass to webmethod - Important to also change webmethod to not accept any parameters 
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (doc) {
                            var events = [];   //javascript event object created here

                            var obj = doc;
                            $(obj).each(function () {
                                events.push({
                                    title: $(this).attr('title'),  //your calevent object has identical parameters 'title', 'start', ect, so this will work
                                    start: $(this).attr('start'), // will be parsed into DateTime object    
                                    end: $(this).attr('end'),
                                    id: $(this).attr('id'),
                                    color: $(this).attr('color')
                                });
                            });
                            if (callback) callback(events);
                        }
                    });
                }
            });

            calendar.render();
        });
    </script>
    <style>
        body {
            margin: 40px 10px;
            padding: 0;
            font-family: Arial, Helvetica Neue, Helvetica, sans-serif;
            font-size: 14px;
        }

        #calendar {
            max-width: 1100px;
            margin: 0 auto;
        }
        /* 土曜日の表示枠色設定 */

        td.fc-day-sat {
            background-color: #eaf4ff;
        }
        /* 日曜日の表示枠色設定 */

        td.fc-day-sun,
        fc-day-hol {
            background-color: #ffeaea;
        }

        .holiday-name {
            width: 90px;
            font-size: 13px;
            color: red;
        }
    </style>
}
@section scripts {
    <!-- FullCalender メインJSの読み込み -->
    <script src="@Url.Content("~/Scripts/calender/calender.js")" type="text/javascript"></script>
    <!-- ヘッダ部分の日本語化JS(locales-all.js)の読み込み -->
    <script src="@Url.Content("~/Scripts/calender/locales-all.js")" type="text/javascript"></script>
}

<div id="calendar"></div>
